<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"   "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <!-- Generated via Iro -->
  <dict>
    <key>fileTypes</key>
    <array>
      <string>mzn</string>
      <string>fzn</string>
      <string>dzn</string>
    </array>
    <key>name</key>
    <string>MiniZinc</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#main</string>
      </dict>
    </array>
    <key>scopeName</key>
    <string>source.MiniZinc</string>
    <key>uuid</key>
    <string></string>
    <key>repository</key>
    <dict>
      <key>main</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#multi_line_comment</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(%.*)</string>
            <key>name</key>
            <string>comment.MiniZinc</string>
            <key>comment</key>
            <string>line comment</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(@)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>text.MiniZinc</string>
              </dict>
            </dict>
            <key>contentName</key>
            <string>text.MiniZinc</string>
            <key>end</key>
            <string>(@)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>text.MiniZinc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#numeric</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:true|false)\b)</string>
            <key>name</key>
            <string>constant.language.MiniZinc</string>
            <key>comment</key>
            <string>Boolean literal</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\bnot\b|&lt;-&gt;|-&gt;|&lt;-|\\/|\bxor\b|/\\)</string>
            <key>name</key>
            <string>keyword.operator.MiniZinc</string>
            <key>comment</key>
            <string>logical operator</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(&lt;|&gt;|&lt;=|&gt;=|==|=|!=)</string>
            <key>name</key>
            <string>keyword.operator.MiniZinc</string>
            <key>comment</key>
            <string>equality operator</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\+|-|\*|/|\bdiv\b|\bmod\b)</string>
            <key>name</key>
            <string>keyword.operator.MiniZinc</string>
            <key>comment</key>
            <string>linear operator</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:in|subset|superset|union|diff|symdiff|intersect|\.\.)\b)</string>
            <key>name</key>
            <string>keyword.operator.MiniZinc</string>
            <key>comment</key>
            <string>set operator</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(;)</string>
            <key>name</key>
            <string>punctuation.MiniZinc</string>
            <key>comment</key>
            <string>terminator</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(:)</string>
            <key>name</key>
            <string>punctuation.MiniZinc</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(,)</string>
            <key>name</key>
            <string>punctuation.MiniZinc</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\{)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#main__2</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\})</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\[)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#main__3</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\])</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#main__4</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(\}|\]|\))</string>
            <key>name</key>
            <string>invalid.illegal.MiniZinc</string>
            <key>comment</key>
            <string>unmatched bracket</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\|)</string>
            <key>name</key>
            <string>invalid.illegal.MiniZinc</string>
            <key>comment</key>
            <string>illegal pipe character</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:annotation|constraint|function|include|op|output|minimize|maximize|predicate|satisfy|solve|test|type)\b)</string>
            <key>name</key>
            <string>keyword.control.MiniZinc</string>
            <key>comment</key>
            <string>item keyword</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:ann|array|bool|enum|float|int|list|of|par|set|string|tuple|var|record|any|opt|op)\b)</string>
            <key>name</key>
            <string>storage.type.MiniZinc</string>
            <key>comment</key>
            <string>type keyword</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:for|forall|exists|if|then|elseif|else|endif|where|let|in|case|of|endcase|lambda)\b)</string>
            <key>name</key>
            <string>keyword.control.MiniZinc</string>
            <key>comment</key>
            <string>expression keyword</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:case|op)\b)</string>
            <key>name</key>
            <string>invalid.illegal.MiniZinc</string>
            <key>comment</key>
            <string>reserved identifiers</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:abort|abs|acosh|array_intersect|array_union|array1d|array2d|array3d|array4d|array5d|array6d|asin|assert|atan|bool2int|card|ceil|concat|cos|cosh|dom|dom_array|dom_size|fix|exp|floor|index_set|index_set_1of2|index_set_2of2|index_set_1of3|index_set_2of3|index_set_3of3|int2float|is_fixed|join|lb|lb_array|length|ln|log|log2|log10|min|max|pow|product|round|set2array|show|show_int|show_float|sin|sinh|sqrt|sum|tan|tanh|trace|ub|ub_array)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>builtin function (stdlib)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:circuit|disjoint|maximum|maximum_arg|member|minimum|minimum_arg|network_flow|network_flow_cost|partition_set|range|roots|sliding_sum|subcircuit|sum_pred)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>general predicates (globals)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:alldifferent|all_different|all_disjoint|all_equal|alldifferent_except_0|nvalue|symmetric_all_different)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>all different and related constraints (globals)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:lex2|lex_greater|lex_greatereq|lex_less|lex_lesseq|strict_lex2|value_precede|value_precede_chain)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>lexicographic constraints (globals)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:arg_sort|decreasing|increasing|sort)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>sorting constraints (globals)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:int_set_channel|inverse|inverse_set|link_set_to_booleans)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>channeling constraints (globals)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:among|at_least|at_most|at_most1|count|count_eq|count_geq|count_gt|count_leq|count_lt|count_neq|distribute|exactly|global_cardinality|global_cardinality_closed|global_cardinality_low_up|global_cardinality_low_up_closed)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>counting constraints (globals)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:bin_packing|bin_packing_capa|bin_packing_load|diffn|diffn_k|diffn_nonstrict|diffn_nonstrict_k|geost|geost_bb|geost_smallest_bb|knapsack)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>packing constraints (globals)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:alternative|cumulative|disjunctive|disjunctive_strict|span)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>scheduling constraints (globals)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b(?:regular|regular_nfa|table)\b)</string>
            <key>name</key>
            <string>support.function.MiniZinc</string>
            <key>comment</key>
            <string>extensional constraints (globals)</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\b[A-Za-z][A-Za-z0-9_]*|&apos;[^\x{0027}]*&apos;)(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.MiniZinc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#main__5</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b[A-Za-z][A-Za-z0-9_]*|&apos;[^\x{0027}]*&apos;)</string>
            <key>name</key>
            <string>variable.MiniZinc</string>
            <key>comment</key>
            <string>variable</string>
          </dict>
        </array>
      </dict>
      <key>main__1</key>
      <dict>
        <key>patterns</key>
        <array>
        </array>
      </dict>
      <key>main__2</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\|)</string>
            <key>name</key>
            <string>punctuation.MiniZinc</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#main</string>
          </dict>
        </array>
      </dict>
      <key>main__3</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\|)</string>
            <key>name</key>
            <string>punctuation.MiniZinc</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#main</string>
          </dict>
        </array>
      </dict>
      <key>main__4</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#main</string>
          </dict>
        </array>
      </dict>
      <key>main__5</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#main</string>
          </dict>
        </array>
      </dict>
      <key>multi_line_comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(/\*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>comment.MiniZinc</string>
              </dict>
            </dict>
            <key>contentName</key>
            <string>comment.MiniZinc</string>
            <key>end</key>
            <string>(\*/)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>comment.MiniZinc</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>multi_line_comment__1</key>
      <dict>
        <key>patterns</key>
        <array>
        </array>
      </dict>
      <key>numeric</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\b0o[0-7]+)</string>
            <key>name</key>
            <string>constant.numeric.MiniZinc</string>
            <key>comment</key>
            <string>octal integer number</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b0x[0-9A-Fa-f]+)</string>
            <key>name</key>
            <string>constant.numeric.MiniZinc</string>
            <key>comment</key>
            <string>hexadecimal number</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b0x[0-9A-Fa-f]+)</string>
            <key>name</key>
            <string>constant.numeric.MiniZinc</string>
            <key>comment</key>
            <string>hexadecimal number</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b\d+(?:(?:.\d+)?[Ee][-\x{002b}]?\d+|.\d+))</string>
            <key>name</key>
            <string>constant.numeric.MiniZinc</string>
            <key>comment</key>
            <string>floating point number</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\b\d+)</string>
            <key>name</key>
            <string>constant.numeric.MiniZinc</string>
            <key>comment</key>
            <string>integer number</string>
          </dict>
        </array>
      </dict>
      <key>string</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\&quot;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.MiniZinc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string__1</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\&quot;)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.MiniZinc</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>string__1</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\\\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string__2</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.MiniZinc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(\\[\x{0022}\x{0027}\x{005c}nrvt])</string>
            <key>name</key>
            <string>constant.character.escape.MiniZinc</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([^\&quot;\x{005c}]+)</string>
            <key>name</key>
            <string>string.MiniZinc</string>
          </dict>
        </array>
      </dict>
      <key>string__2</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#main</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>
