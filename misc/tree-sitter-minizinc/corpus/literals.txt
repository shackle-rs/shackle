======
Absent
======

is_absent = <>;

---

(source_file
  (assignment (identifier) (absent)))

=========
Anonymous
=========

is_anonymous = _;

---

(source_file
  (assignment (identifier) (anonymous)))

========
Infinity
========

word = infinity;
utf8 = ∞;

---

(source_file
  (assignment (identifier) (infinity))
  (assignment (identifier) (infinity)))

=====
Array
=====

empty = [];
single = [1.0];
double = [1, 2.2];
more = [<>, <>, 1, _];

---

(source_file
  (assignment (identifier) (array_literal))
  (assignment (identifier) (array_literal
    (array_literal_member (float_literal))))
  (assignment (identifier) (array_literal
    (array_literal_member (integer_literal))
    (array_literal_member (float_literal))))
  (assignment (identifier) (array_literal
    (array_literal_member (absent))
    (array_literal_member (absent))
    (array_literal_member (integer_literal))
    (array_literal_member (anonymous)))))

=============
Indexed Array
=============

single = [2: 1.0];
double = [2: 1, 3: 2.2];
start = [0: 1, 2.2, <>, _];
multi = [(1, 2): 1.1, (3, 4): 2.2];

---

(source_file
  (assignment (identifier) (array_literal
    (array_literal_member (integer_literal) (float_literal))))
  (assignment (identifier) (array_literal
    (array_literal_member (integer_literal) (integer_literal))
    (array_literal_member (integer_literal) (float_literal))))
  (assignment (identifier) (array_literal
    (array_literal_member (integer_literal) (integer_literal))
    (array_literal_member (float_literal))
    (array_literal_member (absent))
    (array_literal_member (anonymous))))
  (assignment (identifier) (array_literal
    (array_literal_member (integer_literal) (integer_literal) (float_literal))
    (array_literal_member (integer_literal) (integer_literal) (float_literal)))))

========
2D Array
========

empty = [||];
single = [| 1.0 |];
row = [| 1, 2.2 |];
col = [| 1 | 2.2 |];
multi = [| 1, 2.2, 3 | 4.4, <>, 6 | <>, _, 9.9 |];

---

(source_file
  (assignment (identifier) (array_literal_2d))
  (assignment (identifier) (array_literal_2d
    (array_literal_2d_row (float_literal))))
  (assignment (identifier) (array_literal_2d
    (array_literal_2d_row (integer_literal) (float_literal))))
  (assignment (identifier) (array_literal_2d
    (array_literal_2d_row (integer_literal))
    (array_literal_2d_row (float_literal))))
  (assignment (identifier) (array_literal_2d
    (array_literal_2d_row (integer_literal) (float_literal) (integer_literal))
    (array_literal_2d_row (float_literal) (absent) (integer_literal))
    (array_literal_2d_row (absent) (anonymous) (float_literal)))))

================
2D Indexed Array
================

empty = [| 1: 2: |];
cols = [| 3: 4:
        | 1, 2
        | 3, 4 |];
rows = [| 5: 0, <>
        | 6: 1, 1.5 |];
both = [|    A: B:
        | C: 0, 0
        | D: 1, _ |];

---

(source_file
  (assignment (identifier) (array_literal_2d
    (integer_literal)
    (integer_literal)))
  (assignment (identifier) (array_literal_2d
    (integer_literal)
    (integer_literal)
    (array_literal_2d_row (integer_literal) (integer_literal))
    (array_literal_2d_row (integer_literal) (integer_literal))))
  (assignment (identifier) (array_literal_2d
    (array_literal_2d_row (integer_literal) (integer_literal) (absent))
    (array_literal_2d_row (integer_literal) (integer_literal) (float_literal))))
  (assignment (identifier) (array_literal_2d
    (identifier)
    (identifier)
    (array_literal_2d_row (identifier) (integer_literal) (integer_literal))
    (array_literal_2d_row (identifier) (integer_literal) (anonymous)))))

=======
Boolean
=======

boolean_id = false;
boolean_id = true;

---

(source_file
  (assignment (identifier) (boolean_literal))
  (assignment (identifier) (boolean_literal)))

======
Number
======

simple_float = 3.65;
exponent_float = 4.5e10;
simple_exponent_float = 5E-10;

decimal_integer = 123;
hexadecimal_integer = 0xA23F;
octal_integer = 0o701;
binary_integer = 0b00110101;

---

(source_file
  (assignment (identifier) (float_literal))
  (assignment (identifier) (float_literal))
  (assignment (identifier) (float_literal))
  (assignment (identifier) (integer_literal))
  (assignment (identifier) (integer_literal))
  (assignment (identifier) (integer_literal))
  (assignment (identifier) (integer_literal)))

===
Set
===

empty = {};
empty_utf8 = ∅;
single = {1.0};
double = {1, 2.2};
more = {<>, <>, 1, <>};

---

(source_file
  (assignment (identifier) (set_literal))
  (assignment (identifier) (set_literal))
  (assignment (identifier) (set_literal (float_literal)))
  (assignment (identifier) (set_literal (integer_literal) (float_literal)))
  (assignment (identifier) (set_literal (absent) (absent) (integer_literal) (absent))))

======
String
======

empty_string = "";
small_string = "test";
spaced_string = "    Another test    ";
escaped_string = "\t\n";

---

(source_file
  (assignment (identifier) (string_literal))
  (assignment (identifier) (string_literal (string_characters)))
  (assignment (identifier) (string_literal (string_characters)))
  (assignment (identifier) (string_literal (escape_sequence) (escape_sequence))))
